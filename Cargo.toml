[package]
name = "zing"
version = "0.1.0"
edition = "2021"
build = "./src/build/mod.rs"

[lib]
crate-type = ["rlib", "cdylib"]

[dependencies]
actix-files = { version = "0.6", optional = true }
actix-web = { version = "4", optional = true, features = ["macros", "secure-cookies"] }
actix-identity = { version = "0.5.2", optional = true }
actix-session = { version = "0.7.2", features = ["redis", "redis-rs-session"], optional = true }
actix = { version = "0.13.0", optional = true }
console_error_panic_hook = "0.1"
cfg-if = "1"
leptos = { version = "0.3.0", default-features = false, features = [
  "serde",
] }
leptos_meta = { version = "0.3.1", default-features = false }
leptos_actix = { version = "0.3.1", optional = true }
leptos_router = { version = "0.3.1", default-features = false }
# leptos-use = { version = "0.3.3", default-features = false, features = ["storage"] }
wasm-bindgen = "0.2.87"
serde = { version = "1.0.163", features = ["derive"] }
serde_json = "1.0.96"
getrandom = { version = "0.2.9", features = ["js"] }
# serde_urlencoded = "0.7.1"
fancy-regex = { version = "0.11.0" }
validator = { version = "0.16.0", features = ["derive", "phone"] }
lazy_static = "1.4.0"
env_logger = "0.10.0"
web-sys = { version = "0.3.63", features = ["HtmlFormElement", "SubmitEvent", "KeyboardEvent", "Window", "Location", "History", "File", "FileList", "HtmlInputElement", "HtmlLiElement", "ScrollToOptions", "ScrollBehavior", "Element"] }
gloo-net = { version = "0.3.0", features = [] }
gloo-file = { version = "0.2.3", features = ["futures"] }
tokio = { version = "1.28.1", features = ["rt", "process"], optional = true }
wasm-bindgen-futures = "0.4.36"
sea-orm-migration = { version = "0.11.3"}
async-trait = "0.1.68"
sea-orm = { version = "0.11.3", features = ["sqlx-mysql", "runtime-tokio-native-tls", "with-chrono"], optional = true }
lettre = { version = "0.10.4", optional = true }
askama = "0.12.0"
base64 = "0.21.2"
chrono = "0.4.24"
rand = "0.8.5"
redis = "0.23.0"
argon2 = "0.5.0"
leptos_icons = { version = "0.0.12", default_features = false ,features = ["AiCloseCircleFilled", "HiChatBubbleOvalLeftEllipsisSolidMd", "HiUserCircleSolidMd", "HiArrowLeftCircleOutlineLg", "AiUserOutlined", "AiUserAddOutlined", "HiChevronLeftSolidLg", "BiUserCircleSolid", "HiEllipsisHorizontalSolidMd", "TbPhotoFilled", "HiPaperAirplaneOutlineLg", "LuImageOff", "IoClose", "IoTrash", "FiAlertTriangle"] }
futures-util = "0.3.28"
iter_tools = "0.1.4"
infer = "0.14.0"
actix-web-actors = { version = "4.2.0", optional = true }
image = { version = "0.24.6", features = ["rgb"], optional = true }
turbojpeg = { version = "0.5.2", features = ["image"], optional = true }
parking_lot = { version = "0.12.1", features = ["deadlock_detection", "hardware-lock-elision", "nightly", "arc_lock"] }

[build-dependencies]
pkg-config = "0.3.26"

# [profile.wasm-release]
# inherits = "release"
# opt-level = 'z'
# lto = true
# codegen-units = 1

[features]
default = ["ssr"]
hydrate = ["leptos/hydrate", "leptos_meta/hydrate", "leptos_router/hydrate"]
csr = ["leptos/csr", "leptos_meta/csr", "leptos_router/csr"]
ssr = [
  "dep:actix-files",
  "dep:actix-web",
  "dep:leptos_actix",
  "dep:sea-orm",
  "dep:lettre",
  "dep:tokio",
  "dep:actix-identity",
  "dep:actix",
  "dep:image",
  "dep:turbojpeg",
  "dep:actix-web-actors",
  "dep:actix-session",
  "leptos/ssr",
  "leptos_meta/ssr",
  "leptos_router/ssr",
]

[package.metadata.leptos]
# lib-profile-release = "wasm-release"
# project name
name = "zing"
# The site root folder is where cargo-leptos generate all output. WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup.
site-root = "target/site"
# The site-root relative folder where all compiled output (JS, WASM and CSS) is written
# Defaults to pkg	
site-pkg-dir = "pkg"
# [Optional] The source CSS file. If it ends with .sass or .scss then it will be compiled by dart-sass into CSS. The CSS is optimized by Lightning CSS before being written to <site-root>/<site-pkg>/app.css
style-file = "src/styles/output.css"
# Assets source dir. All files found here will be copied and synchronized to site-root.
# The assets-dir cannot have a sub directory with the same name/path as site-pkg-dir.
#
# Optional. Env: LEPTOS_ASSETS_DIR.
assets-dir = "assets"
# The IP and port (ex: 127.0.0.1:3000) where the server serves the content. Use it in your server setup.
site-addr = "0.0.0.0:8000"
# The port to use for automatic reload monitoring
reload-port = 3001
# [Optional] Command to use when running end2end tests. It will run in the end2end dir.
#   [Windows] for non-WSL use "npx.cmd playwright test"
#   This binary name can be checked in Powershell with Get-Command npx
#  The browserlist query used for optimizing the CSS.
browserquery = "defaults"
# Set by cargo-leptos watch when building with that tool. Controls whether autoreload JS will be included in the head
watch = true
# The environment Leptos will run in, usually either "DEV" or "PROD"
env = "PROD"
# The features to use when compiling the bin target
#
# Optional. Can be over-ridden with the command line parameter --bin-features
bin-features = ["ssr"]
# If the --no-default-features flag should be used when compiling the bin target
#
# Optional. Defaults to false.
bin-default-features = false

# The features to use when compiling the lib target
#
# Optional. Can be over-ridden with the command line parameter --lib-features
lib-features = ["hydrate"]

# If the --no-default-features flag should be used when compiling the lib target
#
# Optional. Defaults to false.
lib-default-features = false

